什么是canvas？
-->1、canvas是html5中新的标签
-->2、实现绘图


老师, 能不能简单的再说下折线图面向对象的思路



for in 和 forEach 的用法？
-->for in 是一种关键字，用来遍历对象的属性，可以把对象的原型链中所有可以遍历的属性遍历出来

var obj={ name:"ccc",age:18 };
var key;
for( key in obj){
    console.log(key);
}

-->forEach是ES5中提供的遍历数组的一个方法
var numbers=[1,3,5];
numbers.forEach(function(value,index){
    //value：表示元素的值
    //index：表示元素的索引
},第二个参数制定了回调函数内部的this的值，如果不传回调函数内部的this指向window);



老师啊，那个面向对象在以后工作中一定得用吗？我的这个学的模棱两可啊。。
-->1、一定，哪怕暂时不用，以后也一定会用，面向对象是往高级进阶的必经之路，而且最重要的在于它的思想，我们在学习的时候，先学习基本的套路，以后在工作中通过数以万计的代码达到融会贯通
-->2、后面的时间还很多，不要继续浪费就好，抓抓紧，上上弦，机会很多。



详细讲一下面向对象编程吧
感觉今天学的canvas的知识都挺好的，最后用面向对象就有点模糊了



this的指向不太懂
-->1、要分析this，首先要看this是否位于某个【函数体】内部，
    -->1.1、如果位于某个函数体内部，就分析该函数是如何被调用的 ☆☆☆函数的4种调用模式☆☆☆
    -->1.2、如果不位于任何函数体内部，this就指向window
    -->1.3、常见的需要【记住】的this的场合
        -->a、setInterval/setTimeout回调函数内部的this指向window
        -->b、数组的forEach、map、every、filter这些方法的回调函数内部的this默认指向window，如果给方法传递了第二个参数，则回调函数内部的this指向该参数
        -->c、$.each指向元素的值所对应的对象

-->2、函数的4种调用模式的this
    -->2.1、函数调用模式
        -->this指向window
    -->2.2、构造函数调用模式
        -->this指向构造函数的实例
    -->2.3、方法调用模式
        -->this指向调用该方法的对象
    -->2.4、上下文调用模式
        -->call/apply方法的第一个参数决定了函数内部的this
            -->function fn(){}
            -->fn.call(1)   -->Number的实例
            -->fn.call("abc")   -->String的实例
            -->fn.call(true)    -->Boolean的实例
            -->fn.call({})      -->{}
            -->fn.call(null)    -->window
            -->fn.call(undefined)   -->window



原型链不懂 希望老师给补补 还有方法调用模式
-->对象.__proto__-->指向该对象的构造函数的原型
    function Person(){}
    var p1=new Person();
    -->p1.__proto__==Person.prototype

    -->[1,3,5].__proto__==Array.prototype
    -->Person.__proto__==Function.prototype
    -->Object.__proto__==Function.prototype
    -->Array.__proto__==Function.prototype
-->分辨原型的技巧：
    -->如果某个原型中有个constructor属性指向某个函数，那么说明该原型就是该函数的原型



面向对象一塌糊涂，希望老师再带一带。。。



枕头里要常嗮充满的辛酸泪和发霉的梦想



老师上课 不要一惊一乍的好吗？吓得小魂都没了 谢谢



建议老师使用软件的配色方案鲜明一点，注释不要用灰色等暗色



非零环绕原则的概念有点模糊
非零环绕那个1 和 -1